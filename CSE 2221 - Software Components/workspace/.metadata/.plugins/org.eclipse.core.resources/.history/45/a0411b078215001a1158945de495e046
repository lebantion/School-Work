import components.naturalnumber.NaturalNumber;
import components.naturalnumber.NaturalNumber2;
import components.xmltree.XMLTree;

/**
 * Put a short phrase describing the program here.
 *
 * @author Put your name here
 *
 */
public final class ProgramWithIOAndStaticMethod {

    private static NaturalNumber productOfDigits1(NaturalNumber n) {
        String num = n.toString();

        NaturalNumber value = new NaturalNumber2(1);

        for (int i = 0; i < num.length(); i++) {
            value.multiply(new NaturalNumber2(
                    Integer.parseInt(String.valueOf(num.charAt(i)))));
        }

        return value;
    }

    private static NaturalNumber productOfDigits2(NaturalNumber n) {
        String num = n.toString();

        n = new NaturalNumber2(1);

        for (int i = 0; i < num.length(); i++) {
            n.multiply(new NaturalNumber2(
                    Integer.parseInt(String.valueOf(num.charAt(i)))));
        }

        return n;
    }

    private static int toInt(NaturalNumber n) {
        String num = n.toString();
        return Integer.parseInt(num);
    }

    private static boolean findTag(XMLTree xml, String tag) {
        boolean result = false;

        if (xml.numberOfChildren() == 0) {
            return xml.label().equals(tag);
        } else {
            for (int i = 0; i < xml.numberOfChildren(); i++) {
                result = findTag(xml.child(i), tag);
            }
        }

        return result;

    }

    public static void main(String[] args) {

    }

}
